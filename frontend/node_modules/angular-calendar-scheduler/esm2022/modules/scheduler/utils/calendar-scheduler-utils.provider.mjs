import { Inject, Injectable } from '@angular/core';
import { getSchedulerViewHourGrid, getSchedulerViewDays, getSchedulerView } from './calendar-scheduler-utils';
import { MOMENT } from 'angular-calendar';
import * as i0 from "@angular/core";
import * as i1 from "angular-calendar";
export class CalendarSchedulerUtils {
    dateAdapter;
    moment;
    constructor(dateAdapter, moment) {
        this.dateAdapter = dateAdapter;
        this.moment = moment;
    }
    getSchedulerViewHourGrid(args) {
        return getSchedulerViewHourGrid(this.dateAdapter, args);
    }
    getSchedulerViewDays(args) {
        return getSchedulerViewDays(this.dateAdapter, args);
    }
    getSchedulerView(args) {
        return getSchedulerView(this.dateAdapter, this.moment, args);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.7", ngImport: i0, type: CalendarSchedulerUtils, deps: [{ token: i1.DateAdapter }, { token: MOMENT }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.7", ngImport: i0, type: CalendarSchedulerUtils });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.7", ngImport: i0, type: CalendarSchedulerUtils, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.DateAdapter }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MOMENT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItc2NoZWR1bGVyLXV0aWxzLnByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGliL21vZHVsZXMvc2NoZWR1bGVyL3V0aWxzL2NhbGVuZGFyLXNjaGVkdWxlci11dGlscy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQ0gsd0JBQXdCLEVBRXhCLG9CQUFvQixFQUVwQixnQkFBZ0IsRUFFbkIsTUFBTSw0QkFBNEIsQ0FBQztBQUdwQyxPQUFPLEVBQWUsTUFBTSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7OztBQUd2RCxNQUFNLE9BQU8sc0JBQXNCO0lBQ1g7SUFBb0Q7SUFBeEUsWUFBb0IsV0FBd0IsRUFBNEIsTUFBVztRQUEvRCxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUE0QixXQUFNLEdBQU4sTUFBTSxDQUFLO0lBQUksQ0FBQztJQUV4Rix3QkFBd0IsQ0FBQyxJQUFrQztRQUN2RCxPQUFPLHdCQUF3QixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVELG9CQUFvQixDQUFDLElBQThCO1FBQy9DLE9BQU8sb0JBQW9CLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsZ0JBQWdCLENBQUMsSUFBMEI7UUFDdkMsT0FBTyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDakUsQ0FBQzt1R0FiUSxzQkFBc0IsNkNBQ3VCLE1BQU07MkdBRG5ELHNCQUFzQjs7MkZBQXRCLHNCQUFzQjtrQkFEbEMsVUFBVTs7MEJBRXdDLE1BQU07MkJBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG4gICAgZ2V0U2NoZWR1bGVyVmlld0hvdXJHcmlkLFxyXG4gICAgR2V0U2NoZWR1bGVyVmlld0hvdXJHcmlkQXJncyxcclxuICAgIGdldFNjaGVkdWxlclZpZXdEYXlzLFxyXG4gICAgR2V0U2NoZWR1bGVyVmlld0RheXNBcmdzLFxyXG4gICAgZ2V0U2NoZWR1bGVyVmlldyxcclxuICAgIEdldFNjaGVkdWxlclZpZXdBcmdzXHJcbn0gZnJvbSAnLi9jYWxlbmRhci1zY2hlZHVsZXItdXRpbHMnO1xyXG5pbXBvcnQgeyBXZWVrVmlld0hvdXIgfSBmcm9tICdjYWxlbmRhci11dGlscyc7XHJcbmltcG9ydCB7IFNjaGVkdWxlclZpZXcsIFNjaGVkdWxlclZpZXdEYXkgfSBmcm9tICcuLi9tb2RlbHMnO1xyXG5pbXBvcnQgeyBEYXRlQWRhcHRlciwgTU9NRU5UIH0gZnJvbSAnYW5ndWxhci1jYWxlbmRhcic7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBDYWxlbmRhclNjaGVkdWxlclV0aWxzIHtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGF0ZUFkYXB0ZXI6IERhdGVBZGFwdGVyLCBASW5qZWN0KE1PTUVOVCkgcHJvdGVjdGVkIG1vbWVudDogYW55KSB7IH1cclxuXHJcbiAgICBnZXRTY2hlZHVsZXJWaWV3SG91ckdyaWQoYXJnczogR2V0U2NoZWR1bGVyVmlld0hvdXJHcmlkQXJncyk6IFdlZWtWaWV3SG91cltdIHtcclxuICAgICAgICByZXR1cm4gZ2V0U2NoZWR1bGVyVmlld0hvdXJHcmlkKHRoaXMuZGF0ZUFkYXB0ZXIsIGFyZ3MpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFNjaGVkdWxlclZpZXdEYXlzKGFyZ3M6IEdldFNjaGVkdWxlclZpZXdEYXlzQXJncyk6IFNjaGVkdWxlclZpZXdEYXlbXSB7XHJcbiAgICAgICAgcmV0dXJuIGdldFNjaGVkdWxlclZpZXdEYXlzKHRoaXMuZGF0ZUFkYXB0ZXIsIGFyZ3MpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFNjaGVkdWxlclZpZXcoYXJnczogR2V0U2NoZWR1bGVyVmlld0FyZ3MpOiBTY2hlZHVsZXJWaWV3IHtcclxuICAgICAgICByZXR1cm4gZ2V0U2NoZWR1bGVyVmlldyh0aGlzLmRhdGVBZGFwdGVyLCB0aGlzLm1vbWVudCwgYXJncyk7XHJcbiAgICB9XHJcbn1cclxuIl19